{
    "categories": {
        "default": {
            "resources": {
                "cores": 1,
                "memory": 4096,
                "disk": 4096,
            },
        },
    },
    "rules": [
        {
            "command": format(
                "%s raw_points/%s.csv outputs/%s/%s.csv",
                PRE_SCRIPT, t, t, t
            ),
            "outputs": [
                format("outputs/%s/%s.csv", t, t),
                format("outputs/%s", t),
            ],
            "inputs": [
                format("raw_points/%s.csv", t),
                PRE_SCRIPT,
                PROCESS_POINTS,
            ],
        } for t in taxa, {
            "command": format(
                "%s outputs/%s/%s.csv %s outputs/%s/model outputs/%s/model/%s.lambdas",
                MAXENT_SCRIPT, t, t, model, t, t, t
            ),
            "inputs": [
                MAXENT_SCRIPT,
                MAXENT,
                JAVA,
                model,
                format("outputs/%s/%s.csv", t, t)
            ],
            "outputs": [
                format("outputs/%s/model", t),
                format("outputs/%s/model/%s.lambdas", t, t),
            ],
        } for t in taxa, {
            "command": format(
                "%s outputs/%s/model/%s.lambdas %s outputs/%s/proj_%s/%s_%s.asc",
                PROJECT_SCRIPT, t, t, p, t, basename(p), t, basename(p)
            ),
            "outputs": [
                format("outputs/%s/proj_%s", t, basename(p)),
                format(
                    "outputs/%s/proj_%s/%s_%s.asc",
                    t, basename(p), t, basename(p)
                )
            ],
            "inputs": [
                PROJECT_SCRIPT,
                MAXENT,
                JAVA,
                model,
                p,
                format("outputs/%s/model/%s.lambdas", t, t),
            ]
        } for t in taxa for p in projections,
    ],
}
